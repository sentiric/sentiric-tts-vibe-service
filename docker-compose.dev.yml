# docker-compose.dev.yml
# Service Geliştirme ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}

volumes:
  # [capability-tts]: Konuşma Sentezleme Yetenekleri (TTS Capabilities)
  # --------------------------------------------------  
  tts_cache:

services:
  # [capability-tts]: Konuşma Sentezleme Yetenekleri (TTS Capabilities)
  # -------------------------------------------------- 
  tts-vibe-service:
    build:
      context: ../sentiric-tts-vibe-service
      # args:
        # Dockerfile'daki varsayılan değerler CPU build için ayarlandı.
        # GPU build için aşağıdaki yorum satırlarını kaldırın ve
        # sisteminizdeki CUDA versiyonuna uygun değerleri girin (örn: cu118, cu121).
        # PYTHON_VERSION: 3.11
        # BASE_IMAGE_TAG: "3.11-slim-bullseye" # Veya NVIDIA'nın kendi imajı "nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04"
        # PYTORCH_EXTRA_INDEX_URL: "https://download.pytorch.org/whl/cu121"

    # --- GPU KAYNAK AYARLARI ---
    # Not: Docker Desktop veya Linux üzerinde NVIDIA Container Toolkit kurulu olmalıdır.
    # Eğer GPU'lu bir ortam yoksa bu bölüm Docker tarafından genellikle göz ardı edilir.
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]      
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
      - ./app:/app
      - tts_cache:/root/.cache/huggingface      
    ports: 
      - "14050:${TTS_VIBE_SERVICE_HTTP_PORT:-14050}"
      - "14051:${TTS_VIBE_SERVICE_GRPC_PORT:-14051}"
      - "14052:${TTS_VIBE_SERVICE_METRICS_PORT:-14052}"          
    networks:
      sentiric-net:
        ipv4_address: ${TTS_VIBE_SERVICE_IPV4_ADDRESS}       
    restart: always
